{"version":3,"sources":["pages/home/styles.module.less","polyfill.js","utils/axios-config.js","serviceWorker.js","app/head/index.js","pages/home/index.js","app/index.js","router/routes.js","pages/subnav1/content1/index.js","pages/subnav1/content2/index.js","pages/subnav2/content5/index.js","pages/subnav2/content6/index.js","pages/setting/index.js","router/index.js","index.js"],"names":["module","exports","Object","setPrototypeOf","setprototypeof","Axios","interceptors","response","use","data","status","message","error","Message","ERROR","Promise","reject","SUCCESS","FAIL","Boolean","window","location","hostname","match","Header","Head","useLocation","history","useHistory","activeMenu","pathname","className","theme","mode","defaultSelectedKeys","style","lineHeight","onSelect","selectItem","push","key","Item","Home","props","state","styles","cssTest","React","Component","SubMenu","Content","Footer","Sider","subMenuList","title","iconType","menuItems","routes","path","component","SelectedKey","substring","lastIndexOf","OpenKey","findIndex","item","some","op","onMenuItemCilck","padding","margin","background","width","defaultOpenKeys","String","selectedKeys","forceSubMenuRender","height","map","index","type","menuItm","onClick","i","to","textAlign","auth","RouteWithSubRoutes","route","render","allow","warning","checkAuth","RouteConfig","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,0B,i8CCA5BC,OAAOC,eAAiBC,I,+DCqBxBC,EAAMC,aAAaC,SAASC,KAAI,SAACD,GAE7B,OAAIA,EAASE,MAAiC,MAAzBF,EAASE,KAAKC,OACxBH,EAASE,MAEpBE,EAAA,EAAQC,MAAOL,EAASE,MAAQF,EAASE,KAAKE,SAAYE,EAAQC,OAC3DC,QAAQC,OAAOT,OACvB,SAACK,GAEA,OAAQA,EAAML,SAASG,QACnB,KAAK,IAAK,KAAK,IACXC,EAAA,EAAQC,MAAOA,EAAML,SAASE,MAAQG,EAAML,SAASE,KAAKE,SAAYE,EAAQC,OAC9E,MACJ,QACIH,EAAA,EAAQC,MAAMC,EAAQC,OAE9B,OAAOC,QAAQC,OAAOJ,EAAML,aAGzB,IAAMM,EAAU,CACnBI,QAAS,2BACTH,MAAO,+DACPI,KAAM,gEChCUC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2D,+GCdAC,G,WAAAA,QA6BOC,EA3BF,WAET,IAAIJ,EAAWK,cACXC,EAAUC,cACVC,EAAaR,EAASS,SAK1B,OACI,oBAACN,EAAD,KACI,2BAAKO,UAAU,SACf,yBACIC,MAAM,OACNC,KAAK,aACLC,oBAAqBL,EACrBM,MAAO,CAAEC,WAAY,QACrBC,SAXK,SAACC,GACdX,EAAQY,KAAKD,EAAWE,OAYhB,wBAAMC,KAAN,CAAWD,IAAI,SAAf,gBACA,wBAAMC,KAAN,CAAWD,IAAI,SAAf,sBACA,wBAAMC,KAAN,CAAWD,IAAI,YAAf,mB,kBCtBKE,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKf,OACI,+BACI,oBAAC,EAAD,MACA,yBAAGb,UAAWc,IAAOC,SAArB,a,GATkBC,MAAMC,W,mCCKhCC,E,IAAAA,QACAC,E,IAAAA,QAASC,E,IAAAA,OAAQC,E,IAAAA,MAGnBC,EAAc,CAChB,CACIC,MAAO,WACPC,SAAU,OACVC,UAAW,CAAC,CACRhB,IAAK,WACLc,MAAO,WACR,CACCd,IAAK,WACLc,MAAO,WACR,CACCd,IAAK,WACLc,MAAO,aAGf,CACIA,MAAO,WACPC,SAAU,SACVC,UAAW,CAAC,CACRhB,IAAK,WACLc,MAAO,WACR,CACCd,IAAK,WACLc,MAAO,WACR,CACCd,IAAK,WACLc,MAAO,aAGf,CACIA,MAAO,WACPC,SAAU,eACVC,UAAW,CAAC,CACRhB,IAAK,WACLc,MAAO,WACR,CACCd,IAAK,WACLc,MAAO,WACR,CACCd,IAAK,WACLc,MAAO,cC7CNG,EAAS,CAClB,CACIC,KAAM,QACNC,UAAWjB,GAEf,CACIgB,KAAM,QACNC,UD2CI,SAAChB,GAET,IAAIb,EAAWa,EAAMtB,SAASS,SAC1B8B,EAAc9B,EAAS+B,UAAU/B,EAASgC,YAAY,KAAO,GAC7DC,EAAUV,EAAYW,WAAU,SAACC,GAAD,OAAUA,EAAKT,UAAUU,MAAK,SAACC,GAAD,OAAQA,EAAG3B,MAAQoB,QAE/EQ,EAAkB,SAACH,GACrBtB,EAAMhB,QAAQY,KAAd,gBAA4B0B,EAAKzB,OAGrC,OACI,yBAAKT,UAAU,YACX,2BACI,kBAAC,EAAD,MACA,kBAACmB,EAAD,CAASf,MAAO,CAAEkC,QAAS,WACvB,uBAAYlC,MAAO,CAAEmC,OAAQ,WACzB,sBAAY7B,KAAZ,2BACA,sBAAYA,KAAZ,KAAkBY,EAAYU,IAAYV,EAAYU,GAAST,OAC/D,sBAAYb,KAAZ,KAAkBmB,IAEtB,uBAAQzB,MAAO,CAAEkC,QAAS,SAAUE,WAAY,SAC5C,kBAACnB,EAAD,CAAOoB,MAAO,IAAKrC,MAAO,CAAEoC,WAAY,SACpC,uBACItC,KAAK,SACLwC,gBAAiB,CAACC,OAAOX,EAAU,EAAI,EAAIA,IAC3CY,aAAcf,EACdgB,oBAAkB,EAClBzC,MAAO,CAAE0C,OAAQ,SAEhBxB,EAAYyB,KAAI,SAACb,EAAMc,GAAP,OACb,kBAAC9B,EAAD,CACIT,IAAKuC,EACLzB,MAAO,8BAAM,uBAAM0B,KAAMf,EAAKV,WAAaU,EAAKX,QAE/CW,EAAKT,UAAUsB,KAAI,SAACG,GAAD,OAChB,sBAAMxC,KAAN,CAAWD,IAAKyC,EAAQzC,IAAK0C,QAASd,GAAmBa,EAAQ3B,gBAMrF,kBAAC,IAAD,KACKX,EAAMc,OAAOqB,KAAI,SAACb,EAAMkB,GAAP,OACd,kBAAC,EAAD,eAAoB3C,IAAK2C,GAAOlB,OAEpC,kBAAC,IAAD,CAAUmB,GAAG,sBAIzB,kBAACjC,EAAD,CAAQhB,MAAO,CAAEkD,UAAW,WAA5B,6CC3FR5B,OAAQ,CACJ,CACIC,KAAM,iBACNC,U,YCnBZ,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKf,OACI,+C,GAP0BG,MAAMC,YDsBhC,CACIU,KAAM,iBACNC,U,YEvBZ,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKf,OACI,+C,GAP0BG,MAAMC,YF0BhC,CACIU,KAAM,iBACNC,U,YG3BZ,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKf,OACI,+C,GAP0BG,MAAMC,YH8BhC,CACIU,KAAM,iBACN4B,MAAM,EACN3B,U,YIhCZ,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKf,OACI,+C,GAP0BG,MAAMC,cJqCxC,CACIU,KAAM,WACN4B,MAAM,EACN3B,U,YKnCJ,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,GAFE,E,sEAKf,OACI,+BACI,oBAAC,EAAD,MADJ,e,GAPyBG,MAAMC,aCgB9BuC,EAAqB,SAACC,GAC/B,OACI,kBAAC,IAAD,CACI9B,KAAM8B,EAAM9B,KACZ+B,OAAQ,SAAC9C,GACL,IAAI+C,GAAQ,EAEZ,OADIF,EAAMF,OAAMI,EAdd,SAAC/C,GAGf,OAFAhC,EAAA,EAAQgF,QAAQ,wCAChBhD,EAAMhB,QAAQY,KAAK,UACZ,EAW6BqD,CAAUjD,IAC3B+C,EAAQ,kBAACF,EAAM7B,UAAP,iBAAqBhB,EAArB,CAA4Bc,OAAQ+B,EAAM/B,UAAa,OAmBvEoC,EAbK,WAChB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACKpC,EAAOqB,KAAI,SAACb,EAAMkB,GAAP,OACR,kBAAC,EAAD,eAAoB3C,IAAK2C,GAAOlB,OAEpC,kBAAC,IAAD,CAAUmB,GAAG,aCzB7BU,SAASL,OAAO,oBAAC,EAAD,MAAiBM,SAASC,eAAe,SXoHjD,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAChCA,EAAaC,kB","file":"static/js/main.03a15ad5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cssTest\":\"styles_cssTest__2M4ZL\"};","import setprototypeof from 'setprototypeof';\nObject.setPrototypeOf = setprototypeof;","/**\n * 对axios的一些统一处理\n */\n\nimport Axios from 'axios';\nimport { message } from 'antd';\n\n\n/**\n * 添加请求拦截器\n */\n// Axios.interceptors.request.use((config) => {\n//     // 在发送请求之前做些什么\n//     return config;\n// }, (error) => {\n//     // 对请求错误做些什么\n//     return Promise.reject(error);\n// });\n\n\n\n// 添加响应拦截器\nAxios.interceptors.response.use((response) => {\n    // 对响应数据做点什么\n    if (response.data && response.data.status === 200) {\n        return response.data;\n    }\n    message.error((response.data && response.data.message) || Message.ERROR);\n    return Promise.reject(response);\n}, (error) => {\n    // 对响应错误做点什么\n    switch (error.response.status) {\n        case 401: case 403:\n            message.error((error.response.data && error.response.data.message) || Message.ERROR);\n            break;\n        default:\n            message.error(Message.ERROR);\n    }\n    return Promise.reject(error.response);\n});\n\nexport const Message = {\n    SUCCESS: '请求成功',\n    ERROR: '网络异常，请稍后重试',\n    FAIL: '请求失败，请稍后重试'\n};\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","\nimport { Layout, Menu } from 'antd';\nimport '../index.less';\nimport { useLocation, useHistory } from 'react-router-dom';\nconst { Header } = Layout;\n\nconst Head = () => {\n\n    let location = useLocation();\n    let history = useHistory();\n    let activeMenu = location.pathname;\n\n    const onSelect = (selectItem) => {\n        history.push(selectItem.key);\n    };\n    return (\n        <Header>\n            <div className=\"logo\" />\n            <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={activeMenu}\n                style={{ lineHeight: '64px' }}\n                onSelect={onSelect}\n            >\n                <Menu.Item key=\"/home\">首页</Menu.Item>\n                <Menu.Item key=\"/main\">控制台</Menu.Item>\n                <Menu.Item key=\"/setting\">设置</Menu.Item>\n            </Menu>\n        </Header>\n    );\n};\n\nexport default Head;","import Head from '@/app/head';\nimport styles from './styles.module.less';\n\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div>\n                <Head />\n                <p className={styles.cssTest} >Home</p>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport './index.less';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport Head from './head';\nimport {\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { RouteWithSubRoutes } from '@/router';\n\nconst { SubMenu } = Menu;\nconst { Content, Footer, Sider } = Layout;\n\n\nconst subMenuList = [\n    {\n        title: 'subnav 1',\n        iconType: 'user',\n        menuItems: [{\n            key: 'content1',\n            title: 'option1'\n        }, {\n            key: 'content2',\n            title: 'option2'\n        }, {\n            key: 'content3',\n            title: 'option3'\n        }]\n    },\n    {\n        title: 'subnav 2',\n        iconType: 'laptop',\n        menuItems: [{\n            key: 'content4',\n            title: 'option4'\n        }, {\n            key: 'content5',\n            title: 'option5'\n        }, {\n            key: 'content6',\n            title: 'option6'\n        }]\n    },\n    {\n        title: 'subnav 3',\n        iconType: 'notification',\n        menuItems: [{\n            key: 'content7',\n            title: 'option7'\n        }, {\n            key: 'content8',\n            title: 'option8'\n        }, {\n            key: 'content9',\n            title: 'option9'\n        }]\n    }\n];\n\nconst App = (props) => {\n\n    let pathname = props.location.pathname;\n    let SelectedKey = pathname.substring(pathname.lastIndexOf('/') + 1); //取最底的路由\n    let OpenKey = subMenuList.findIndex((item) => item.menuItems.some((op) => op.key === SelectedKey)); //当前路由所在的菜单\n\n    const onMenuItemCilck = (item) => {\n        props.history.push(`/main/${item.key}`);\n    };\n\n    return (\n        <div className=\"app-wrap\">\n            <Layout>\n                <Head />\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>控制台</Breadcrumb.Item>\n                        <Breadcrumb.Item>{subMenuList[OpenKey] && subMenuList[OpenKey].title}</Breadcrumb.Item>\n                        <Breadcrumb.Item>{SelectedKey}</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <Layout style={{ padding: '24px 0', background: '#fff' }}>\n                        <Sider width={200} style={{ background: '#fff' }}>\n                            <Menu\n                                mode=\"inline\"\n                                defaultOpenKeys={[String(OpenKey < 0 ? 0 : OpenKey)]}\n                                selectedKeys={SelectedKey}\n                                forceSubMenuRender\n                                style={{ height: '100%' }}\n                            >\n                                {subMenuList.map((item, index) => (\n                                    <SubMenu\n                                        key={index}\n                                        title={<span><Icon type={item.iconType} />{item.title}</span>}\n                                    >\n                                        {item.menuItems.map((menuItm) => (\n                                            <Menu.Item key={menuItm.key} onClick={onMenuItemCilck} >{menuItm.title}</Menu.Item>\n                                        ))}\n                                    </SubMenu>\n                                ))}\n                            </Menu>\n                        </Sider>\n                        <Switch>\n                            {props.routes.map((item, i) => (\n                                <RouteWithSubRoutes key={i} {...item} />\n                            ))}\n                            <Redirect to=\"/main/content1\" />\n                        </Switch>\n                    </Layout>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n            </Layout>\n        </div>\n    );\n};\n\nexport default App;\n","import Home from '@/pages/home';\nimport App from '@/app';\nimport Content1 from '@/pages/subnav1/content1';\nimport Content2 from '@/pages/subnav1/content2';\nimport Content5 from '@/pages/subnav2/content5';\nimport Content6 from '@/pages/subnav2/content6';\nimport Settimg from '@/pages/setting';\n\n// 配置路由\nexport const routes = [\n    {\n        path: '/home',\n        component: Home\n    },\n    {\n        path: '/main',\n        component: App,\n        routes: [\n            {\n                path: '/main/content1',\n                component: Content1\n            },\n            {\n                path: '/main/content2',\n                component: Content2\n            },\n            {\n                path: '/main/content5',\n                component: Content5\n            },\n            {\n                path: '/main/content6',\n                auth: true, //需要权限认证\n                component: Content6\n            }\n        ]\n    },\n    {\n        path: '/setting',\n        auth: true, //需要权限认证\n        component: Settimg\n    }\n];","export default class Content1 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div>\n                Content1\n            </div >\n        );\n    }\n}","export default class Content2 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div>\n                Content2\n            </div >\n        );\n    }\n}","export default class Content5 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div>\n                Content5\n            </div >\n        );\n    }\n}","export default class Content6 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div>\n                Content6\n            </div >\n        );\n    }\n}","import Head from '@/app/head';\n\n\n\nexport default class Settimg extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <div>\n                <Head />\n                Settimg\n            </div >\n        );\n    }\n}","import React from 'react';\nimport {\n    HashRouter as Router,\n    Route,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport { routes } from './routes';\nimport { message } from 'antd';\n\n\n// 权限认证 进入路由之前的校验 （例如：是否已经登录 || 是否拥有该路由进入权限）\nconst checkAuth = (props) => {\n    message.warning('暂无进入权限');\n    props.history.push('/home');\n    return false;\n};\n\n\n// 子路由控制\nexport const RouteWithSubRoutes = (route) => {\n    return (\n        <Route\n            path={route.path}\n            render={(props) => {\n                let allow = true;\n                if (route.auth) allow = checkAuth(props);\n                return allow ? <route.component {...props} routes={route.routes} /> : ''; // 向下传递子路由以保持嵌套\n            }}\n        />\n    );\n};\n\nconst RouteConfig = () => {\n    return (\n        <Router>\n            <Switch>\n                {routes.map((item, i) => (\n                    <RouteWithSubRoutes key={i} {...item} />\n                ))}\n                <Redirect to=\"/home\" />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default RouteConfig;\n\n","\n//ie polyfill 兼容9+\nimport './polyfill';\nimport 'core-js/es';\nimport 'mutation-observer';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\n\nimport '@/less/index.less';\nimport '@/utils/axios-config';\nimport * as serviceWorker from './serviceWorker';\nimport RouteConfig from './router';\n\n\nReactDOM.render(<RouteConfig />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}